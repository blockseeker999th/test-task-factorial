// Code generated by MockGen. DO NOT EDIT.
// Source: saveFactorial.go

// Package mock_savefactorial is a generated GoMock package.
package mock_savefactorial

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCalculationSaver is a mock of CalculationSaver interface.
type MockCalculationSaver struct {
	ctrl     *gomock.Controller
	recorder *MockCalculationSaverMockRecorder
}

// MockCalculationSaverMockRecorder is the mock recorder for MockCalculationSaver.
type MockCalculationSaverMockRecorder struct {
	mock *MockCalculationSaver
}

// NewMockCalculationSaver creates a new mock instance.
func NewMockCalculationSaver(ctrl *gomock.Controller) *MockCalculationSaver {
	mock := &MockCalculationSaver{ctrl: ctrl}
	mock.recorder = &MockCalculationSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCalculationSaver) EXPECT() *MockCalculationSaverMockRecorder {
	return m.recorder
}

// SaveCalculations mocks base method.
func (m *MockCalculationSaver) SaveCalculations(valueA, valueB int) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveCalculations", valueA, valueB)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveCalculations indicates an expected call of SaveCalculations.
func (mr *MockCalculationSaverMockRecorder) SaveCalculations(valueA, valueB interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveCalculations", reflect.TypeOf((*MockCalculationSaver)(nil).SaveCalculations), valueA, valueB)
}
